{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/jay/Desktop/ScrapeTools/WORKING/ExpoApps/myNewProject/screens/TabOneScreen.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { ListItem, SearchBar } from 'react-native-elements';\n\nvar TabOneScreen = function (_Component) {\n  _inherits(TabOneScreen, _Component);\n\n  var _super = _createSuper(TabOneScreen);\n\n  function TabOneScreen(props) {\n    var _this;\n\n    _classCallCheck(this, TabOneScreen);\n\n    _this = _super.call(this, props);\n\n    _this.makeRemoteRequest = function () {\n      var url = \"https://randomuser.me/api/?&results=20\";\n\n      _this.setState({\n        loading: true\n      });\n\n      fetch(url).then(function (res) {\n        return res.json();\n      }).then(function (res) {\n        _this.setState({\n          data: res.results,\n          error: res.error || null,\n          loading: false\n        });\n\n        _this.arrayholder = res.results;\n      }).catch(function (error) {\n        _this.setState({\n          error: error,\n          loading: false\n        });\n      });\n    };\n\n    _this.renderSeparator = function () {\n      return React.createElement(View, {\n        style: {\n          height: 1,\n          width: '86%',\n          backgroundColor: '#CED0CE',\n          marginLeft: '14%'\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 7\n        }\n      });\n    };\n\n    _this.searchFilterFunction = function (text) {\n      _this.setState({\n        value: text\n      });\n\n      var newData = _this.arrayholder.filter(function (item) {\n        var itemData = item.name.title.toUpperCase() + \" \" + item.name.first.toUpperCase() + \" \" + item.name.last.toUpperCase();\n        var textData = text.toUpperCase();\n        return itemData.indexOf(textData) > -1;\n      });\n\n      _this.setState({\n        data: newData\n      });\n    };\n\n    _this.renderHeader = function () {\n      return React.createElement(SearchBar, {\n        placeholder: \"Type Here...\",\n        lightTheme: true,\n        round: true,\n        onChangeText: function onChangeText(text) {\n          return _this.searchFilterFunction(text);\n        },\n        autoCorrect: false,\n        value: _this.state.value,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 7\n        }\n      });\n    };\n\n    _this.state = {\n      loading: false,\n      data: [],\n      error: null\n    };\n    _this.arrayholder = [];\n    return _this;\n  }\n\n  _createClass(TabOneScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.makeRemoteRequest();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.loading) {\n        return React.createElement(View, {\n          style: {\n            flex: 1,\n            alignItems: 'center',\n            justifyContent: 'center'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 9\n          }\n        }, React.createElement(ActivityIndicator, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 11\n          }\n        }));\n      }\n\n      return React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 7\n        }\n      }, React.createElement(FlatList, {\n        data: this.state.data,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return React.createElement(ListItem, {\n            leftAvatar: {\n              source: {\n                uri: item.picture.thumbnail\n              }\n            },\n            title: item.name.first + \" \" + item.name.last,\n            subtitle: item.email,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 13\n            }\n          });\n        },\n        keyExtractor: function keyExtractor(item) {\n          return item.email;\n        },\n        ItemSeparatorComponent: this.renderSeparator,\n        ListHeaderComponent: this.renderHeader,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return TabOneScreen;\n}(Component);\n\nexport default TabOneScreen;","map":{"version":3,"sources":["/Users/jay/Desktop/ScrapeTools/WORKING/ExpoApps/myNewProject/screens/TabOneScreen.tsx"],"names":["React","Component","ListItem","SearchBar","TabOneScreen","props","makeRemoteRequest","url","setState","loading","fetch","then","res","json","data","results","error","arrayholder","catch","renderSeparator","height","width","backgroundColor","marginLeft","searchFilterFunction","text","value","newData","filter","item","itemData","name","title","toUpperCase","first","last","textData","indexOf","renderHeader","state","flex","alignItems","justifyContent","source","uri","picture","thumbnail","email"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { View, Text, FlatList, ActivityIndicator } from 'react-native';\nimport { ListItem, SearchBar } from 'react-native-elements';\n\nclass TabOneScreen extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      data: [],\n      error: null,\n    };\n\n    this.arrayholder = [];\n  }\n\n  componentDidMount() {\n    this.makeRemoteRequest();\n  }\n\n  makeRemoteRequest = () => {\n    const url = `https://randomuser.me/api/?&results=20`;\n    this.setState({ loading: true });\n\n    fetch(url)\n      .then(res => res.json())\n      .then(res => {\n        this.setState({\n          data: res.results,\n          error: res.error || null,\n          loading: false,\n        });\n        this.arrayholder = res.results;\n      })\n      .catch(error => {\n        this.setState({ error, loading: false });\n      });\n  };\n\n  renderSeparator = () => {\n    return (\n      <View\n        style={{\n          height: 1,\n          width: '86%',\n          backgroundColor: '#CED0CE',\n          marginLeft: '14%',\n        }}\n      />\n    );\n  };\n\n  searchFilterFunction = text => {\n    this.setState({\n      value: text,\n    });\n\n    const newData = this.arrayholder.filter(item => {\n      const itemData = `${item.name.title.toUpperCase()} ${item.name.first.toUpperCase()} ${item.name.last.toUpperCase()}`;\n      const textData = text.toUpperCase();\n\n      return itemData.indexOf(textData) > -1;\n    });\n    this.setState({\n      data: newData,\n    });\n  };\n\n  renderHeader = () => {\n    return (\n      <SearchBar\n        placeholder=\"Type Here...\"\n        lightTheme\n        round\n        onChangeText={text => this.searchFilterFunction(text)}\n        autoCorrect={false}\n        value={this.state.value}\n      />\n    );\n  };\n\n  render() {\n    if (this.state.loading) {\n      return (\n        <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n          <ActivityIndicator />\n        </View>\n      );\n    }\n    return (\n      <View style={{ flex: 1 }}>\n        <FlatList\n          data={this.state.data}\n          renderItem={({ item }) => (\n            <ListItem\n              leftAvatar={{ source: { uri: item.picture.thumbnail } }}\n              title={`${item.name.first} ${item.name.last}`}\n              subtitle={item.email}\n            />\n          )}\n          keyExtractor={item => item.email}\n          ItemSeparatorComponent={this.renderSeparator}\n          ListHeaderComponent={this.renderHeader}\n        />\n      </View>\n    );\n  }\n}\n\nexport default TabOneScreen;"]},"metadata":{},"sourceType":"module"}