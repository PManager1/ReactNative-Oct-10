{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/jay/Desktop/ScrapeTools/WORKING/ExpoApps/RN-with-Amplify/screens/HighPriority.tsx\";\nimport React, { useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport * as Calendar from 'expo-calendar';\nexport default function HighPriority() {\n  useEffect(function () {\n    (function _callee() {\n      var _await$Calendar$reque, status, calendars;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Calendar.requestCalendarPermissionsAsync());\n\n            case 2:\n              _await$Calendar$reque = _context.sent;\n              status = _await$Calendar$reque.status;\n\n              if (!(status === 'granted')) {\n                _context.next = 10;\n                break;\n              }\n\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(Calendar.getCalendarsAsync());\n\n            case 7:\n              calendars = _context.sent;\n              console.log('Here are all your calendars:');\n              console.log({\n                calendars: calendars\n              });\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      backgroundColor: '#fff',\n      alignItems: 'center',\n      justifyContent: 'space-around'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \"Calendar Module Example\"), React.createElement(Button, {\n    title: \"Create a new calendar\",\n    onPress: createCalendar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction getDefaultCalendarSource() {\n  var calendars, defaultCalendars;\n  return _regeneratorRuntime.async(function getDefaultCalendarSource$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(Calendar.getCalendarsAsync());\n\n        case 2:\n          calendars = _context2.sent;\n          defaultCalendars = calendars.filter(function (each) {\n            return each.source.name === 'Default';\n          });\n          return _context2.abrupt(\"return\", defaultCalendars[0].source);\n\n        case 5:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction createCalendar() {\n  var defaultCalendarSource, newCalendarID;\n  return _regeneratorRuntime.async(function createCalendar$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          if (!(Platform.OS === 'ios')) {\n            _context3.next = 6;\n            break;\n          }\n\n          _context3.next = 3;\n          return _regeneratorRuntime.awrap(getDefaultCalendarSource());\n\n        case 3:\n          _context3.t0 = _context3.sent;\n          _context3.next = 7;\n          break;\n\n        case 6:\n          _context3.t0 = {\n            isLocalAccount: true,\n            name: 'Expo Calendar'\n          };\n\n        case 7:\n          defaultCalendarSource = _context3.t0;\n          _context3.next = 10;\n          return _regeneratorRuntime.awrap(Calendar.createCalendarAsync({\n            title: 'Expo Calendar',\n            color: 'blue',\n            entityType: Calendar.EntityTypes.EVENT,\n            sourceId: defaultCalendarSource.id,\n            source: defaultCalendarSource,\n            name: 'internalCalendarName',\n            ownerAccount: 'personal',\n            accessLevel: Calendar.CalendarAccessLevel.OWNER\n          }));\n\n        case 10:\n          newCalendarID = _context3.sent;\n          console.log(\"Your new calendar ID is: \" + newCalendarID);\n\n        case 12:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"sources":["/Users/jay/Desktop/ScrapeTools/WORKING/ExpoApps/RN-with-Amplify/screens/HighPriority.tsx"],"names":["React","useEffect","Calendar","HighPriority","requestCalendarPermissionsAsync","status","getCalendarsAsync","calendars","console","log","flex","backgroundColor","alignItems","justifyContent","createCalendar","getDefaultCalendarSource","defaultCalendars","filter","each","source","name","Platform","OS","isLocalAccount","defaultCalendarSource","createCalendarAsync","title","color","entityType","EntityTypes","EVENT","sourceId","id","ownerAccount","accessLevel","CalendarAccessLevel","OWNER","newCalendarID"],"mappings":";;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;AAEA,OAAO,KAAKC,QAAZ,MAA0B,eAA1B;AAEA,eAAe,SAASC,YAAT,GAAwB;AACrCF,EAAAA,SAAS,CAAC,YAAM;AACd,KAAC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAC0BC,QAAQ,CAACE,+BAAT,EAD1B;;AAAA;AAAA;AACSC,cAAAA,MADT,yBACSA,MADT;;AAAA,oBAEKA,MAAM,KAAK,SAFhB;AAAA;AAAA;AAAA;;AAAA;AAAA,+CAG2BH,QAAQ,CAACI,iBAAT,EAH3B;;AAAA;AAGSC,cAAAA,SAHT;AAIGC,cAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACAD,cAAAA,OAAO,CAACC,GAAR,CAAY;AAAEF,gBAAAA,SAAS,EAATA;AAAF,eAAZ;;AALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAQD,GATQ,EASN,EATM,CAAT;AAWA,SACE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AACLG,MAAAA,IAAI,EAAE,CADD;AAELC,MAAAA,eAAe,EAAE,MAFZ;AAGLC,MAAAA,UAAU,EAAE,QAHP;AAILC,MAAAA,cAAc,EAAE;AAJX,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAPF,EAQE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,uBAAd;AAAsC,IAAA,OAAO,EAAEC,cAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF;AAYD;;AAED,SAAeC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAC0Bb,QAAQ,CAACI,iBAAT,EAD1B;;AAAA;AACQC,UAAAA,SADR;AAEQS,UAAAA,gBAFR,GAE2BT,SAAS,CAACU,MAAV,CAAiB,UAAAC,IAAI;AAAA,mBAAIA,IAAI,CAACC,MAAL,CAAYC,IAAZ,KAAqB,SAAzB;AAAA,WAArB,CAF3B;AAAA,4CAGSJ,gBAAgB,CAAC,CAAD,CAAhB,CAAoBG,MAH7B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMA,SAAeL,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAEIO,QAAQ,CAACC,EAAT,KAAgB,KAFpB;AAAA;AAAA;AAAA;;AAAA;AAAA,2CAGcP,wBAAwB,EAHtC;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,yBAIQ;AAAEQ,YAAAA,cAAc,EAAE,IAAlB;AAAwBH,YAAAA,IAAI,EAAE;AAA9B,WAJR;;AAAA;AACQI,UAAAA,qBADR;AAAA;AAAA,2CAK8BtB,QAAQ,CAACuB,mBAAT,CAA6B;AACvDC,YAAAA,KAAK,EAAE,eADgD;AAEvDC,YAAAA,KAAK,EAAE,MAFgD;AAGvDC,YAAAA,UAAU,EAAE1B,QAAQ,CAAC2B,WAAT,CAAqBC,KAHsB;AAIvDC,YAAAA,QAAQ,EAAEP,qBAAqB,CAACQ,EAJuB;AAKvDb,YAAAA,MAAM,EAAEK,qBAL+C;AAMvDJ,YAAAA,IAAI,EAAE,sBANiD;AAOvDa,YAAAA,YAAY,EAAE,UAPyC;AAQvDC,YAAAA,WAAW,EAAEhC,QAAQ,CAACiC,mBAAT,CAA6BC;AARa,WAA7B,CAL9B;;AAAA;AAKQC,UAAAA,aALR;AAeE7B,UAAAA,OAAO,CAACC,GAAR,+BAAwC4B,aAAxC;;AAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["//  HighPriority \n\nimport React, { useEffect } from 'react';\nimport { View, Text, Button, Platform } from 'react-native';\nimport * as Calendar from 'expo-calendar';\n\nexport default function HighPriority() {\n  useEffect(() => {\n    (async () => {\n      const { status } = await Calendar.requestCalendarPermissionsAsync();\n      if (status === 'granted') {\n        const calendars = await Calendar.getCalendarsAsync();\n        console.log('Here are all your calendars:');\n        console.log({ calendars });\n      }\n    })();\n  }, []);\n\n  return (\n    <View\n      style={{\n        flex: 1,\n        backgroundColor: '#fff',\n        alignItems: 'center',\n        justifyContent: 'space-around',\n      }}>\n      <Text>Calendar Module Example</Text>\n      <Button title=\"Create a new calendar\" onPress={createCalendar} />\n    </View>\n  );\n}\n\nasync function getDefaultCalendarSource() {\n  const calendars = await Calendar.getCalendarsAsync();\n  const defaultCalendars = calendars.filter(each => each.source.name === 'Default');\n  return defaultCalendars[0].source;\n}\n\nasync function createCalendar() {\n  const defaultCalendarSource =\n    Platform.OS === 'ios'\n      ? await getDefaultCalendarSource()\n      : { isLocalAccount: true, name: 'Expo Calendar' };\n  const newCalendarID = await Calendar.createCalendarAsync({\n    title: 'Expo Calendar',\n    color: 'blue',\n    entityType: Calendar.EntityTypes.EVENT,\n    sourceId: defaultCalendarSource.id,\n    source: defaultCalendarSource,\n    name: 'internalCalendarName',\n    ownerAccount: 'personal',\n    accessLevel: Calendar.CalendarAccessLevel.OWNER,\n  });\n  console.log(`Your new calendar ID is: ${newCalendarID}`);\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}