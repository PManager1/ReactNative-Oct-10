{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/jay/Desktop/ScrapeTools/WORKING/ExpoApps/myNewProject/screens/Components/MultiSelector.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\n\nvar MultiSelector = function (_React$Component) {\n  _inherits(MultiSelector, _React$Component);\n\n  var _super = _createSuper(MultiSelector);\n\n  function MultiSelector() {\n    var _this;\n\n    _classCallCheck(this, MultiSelector);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      selectedLang1: false,\n      selectedLang2: false,\n      selectedLang3: false,\n      selectedLang4: false\n    };\n    return _this;\n  }\n\n  _createClass(MultiSelector, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          selectedLang1 = _this$state.selectedLang1,\n          selectedLang2 = _this$state.selectedLang2,\n          selectedLang3 = _this$state.selectedLang3,\n          selectedLang4 = _this$state.selectedLang4;\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.header,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }\n      }, \"What's your favorite programming language?\"), React.createElement(View, {\n        style: styles.item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }\n      }, React.createElement(CheckBox, {\n        checked: selectedLang1,\n        color: \"#fc5185\",\n        onPress: function onPress() {\n          return _this2.setState({\n            selectedLang1: !selectedLang1\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 15\n        }\n      }), React.createElement(Text, {\n        style: _objectSpread(_objectSpread({}, styles.checkBoxTxt), {}, {\n          color: this.state.selectedLang1 ? \"#fc5185\" : \"gray\",\n          fontWeight: this.state.selectedLang1 ? \"bold\" : \"normal\"\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 15\n        }\n      }, \"Python\")), React.createElement(View, {\n        style: styles.item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }\n      }, React.createElement(CheckBox, {\n        checked: this.state.selectedLang2,\n        color: \"#fc5185\",\n        onPress: function onPress() {\n          return _this2.setState({\n            selectedLang2: !selectedLang2\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }\n      }), React.createElement(Text, {\n        style: _objectSpread(_objectSpread({}, styles.checkBoxTxt), {}, {\n          color: this.state.selectedLang2 ? \"#fc5185\" : \"gray\",\n          fontWeight: this.state.selectedLang2 ? \"bold\" : \"normal\"\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }\n      }, \"Javascript\")), React.createElement(View, {\n        style: styles.item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }\n      }, React.createElement(CheckBox, {\n        checked: this.state.selectedLang3,\n        color: \"#fc5185\",\n        onPress: function onPress() {\n          return _this2.setState({\n            selectedLang3: !selectedLang3\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }\n      }), React.createElement(Text, {\n        style: _objectSpread(_objectSpread({}, styles.checkBoxTxt), {}, {\n          color: this.state.selectedLang3 ? \"#fc5185\" : \"gray\",\n          fontWeight: this.state.selectedLang3 ? \"bold\" : \"normal\"\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }\n      }, \"Php\")), React.createElement(View, {\n        style: styles.item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }\n      }, React.createElement(CheckBox, {\n        checked: this.state.selectedLang4,\n        color: \"#fc5185\",\n        onPress: function onPress() {\n          return _this2.setState({\n            selectedLang4: !selectedLang4\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }\n      }), React.createElement(Text, {\n        style: _objectSpread(_objectSpread({}, styles.checkBoxTxt), {}, {\n          color: this.state.selectedLang4 ? \"#fc5185\" : \"gray\",\n          fontWeight: this.state.selectedLang4 ? \"bold\" : \"normal\"\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }\n      }, \"C#\")), React.createElement(TouchableOpacity, {\n        style: styles.submit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: \"white\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }\n      }, \"SUBMIT\")));\n    }\n  }]);\n\n  return MultiSelector;\n}(React.Component);\n\nexport { MultiSelector as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f6f6f6',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  header: {\n    fontSize: 25,\n    fontWeight: \"bold\",\n    color: \"#364f6b\",\n    marginBottom: 40\n  },\n  item: {\n    width: \"80%\",\n    backgroundColor: \"#fff\",\n    borderRadius: 20,\n    padding: 10,\n    marginBottom: 10,\n    flexDirection: \"row\"\n  },\n  checkBoxTxt: {\n    marginLeft: 20\n  },\n  submit: {\n    width: \"80%\",\n    backgroundColor: \"#fc5185\",\n    borderRadius: 20,\n    padding: 10,\n    alignItems: \"center\",\n    marginTop: 40\n  }\n});","map":{"version":3,"sources":["/Users/jay/Desktop/ScrapeTools/WORKING/ExpoApps/myNewProject/screens/Components/MultiSelector.tsx"],"names":["React","MultiSelector","state","selectedLang1","selectedLang2","selectedLang3","selectedLang4","styles","container","header","item","setState","checkBoxTxt","color","fontWeight","submit","Component","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","fontSize","marginBottom","width","borderRadius","padding","flexDirection","marginLeft","marginTop"],"mappings":"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","sourcesContent":["  import React from 'react';\n  import { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\n  // import {CheckBox} from \"native-base\"\n  \n  export default class MultiSelector extends React.Component {\n    state={\n      selectedLang1:false,\n      selectedLang2:false,\n      selectedLang3:false,\n      selectedLang4:false,\n  \n    }\n    render(){\n      const {selectedLang1,selectedLang2,selectedLang3,selectedLang4} = this.state\n      return (\n        <View style={styles.container}>\n          <Text style={styles.header}>What's your favorite programming language?</Text>\n          <View style={styles.item} >\n              <CheckBox checked={selectedLang1} color=\"#fc5185\" onPress={()=>this.setState({selectedLang1:!selectedLang1})}/>\n              <Text style={\n                {...styles.checkBoxTxt,\n                  color:this.state.selectedLang1?\"#fc5185\":\"gray\",\n                  fontWeight:this.state.selectedLang1? \"bold\" :\"normal\"\n                }}\n                >Python</Text>\n          </View>\n          <View style={styles.item}>\n              <CheckBox checked={this.state.selectedLang2} color=\"#fc5185\" onPress={()=>this.setState({selectedLang2:!selectedLang2})}/>\n              <Text style={\n                {...styles.checkBoxTxt,\n                  color:this.state.selectedLang2?\"#fc5185\":\"gray\",\n                  fontWeight:this.state.selectedLang2? \"bold\" :\"normal\"\n                }}\n                >Javascript</Text>\n          </View>\n          <View style={styles.item}>\n              <CheckBox checked={this.state.selectedLang3} color=\"#fc5185\" onPress={()=>this.setState({selectedLang3:!selectedLang3})}/>\n              <Text style={\n                {...styles.checkBoxTxt,\n                  color:this.state.selectedLang3?\"#fc5185\":\"gray\",\n                  fontWeight:this.state.selectedLang3? \"bold\" :\"normal\"\n                }}\n                >Php</Text>\n          </View>\n          <View style={styles.item}>\n              <CheckBox checked={this.state.selectedLang4} color=\"#fc5185\" onPress={()=>this.setState({selectedLang4:!selectedLang4})}/>\n              <Text style={\n                {...styles.checkBoxTxt,\n                  color:this.state.selectedLang4?\"#fc5185\":\"gray\",\n                  fontWeight:this.state.selectedLang4? \"bold\" :\"normal\"\n                }}\n                >C#</Text>\n          </View>\n          <TouchableOpacity style={styles.submit}>\n            <Text style={{color:\"white\"}}>SUBMIT</Text>\n          </TouchableOpacity>\n    \n    \n        </View>\n      );\n    }\n    \n  }\n  \n\n\n\n//     const MultiSelector = () => {   \n      \n//           return (\n//             <SafeAreaView style={styles.container}> \n//               <ScrollView style={styles.scrollView}>\n//             <Form\n//             //   action={login}\n//               afterSubmit={handleResult}\n//               buttonText=\"Submit\"\n//               fields={{\n//                 CompanyName: {\n//                   label: 'CompanyName',\n//                   inputProps: {\n//                     keyboardType: 'company-name',\n//                   },\n//                 },                \n//                 ExecutivePersonName: {\n//                   label: 'Executive Person Name',\n//                   inputProps: {\n//                     keyboardType: 'Authorized-name',\n//                   },\n//                 }, \n//                 ContactPerson: {\n//                   label: 'Contact Person',\n//                   inputProps: {\n//                     keyboardType: 'Contact-name',\n//                   },\n//                 },                                \n//                 Status: {\n//                   label: 'Status',\n//                   inputProps: {\n//                     keyboardType: 'Status',\n//                   },\n//                 }, \n//                 DirectCell: {\n//                   label: 'DirectCell',\n//                   inputProps: {\n//                     keyboardType: 'DirectCell',\n//                   },\n//                 }, \n//                 FollowUpDate: {\n//                   label: 'FollowUpDate',\n//                   inputProps: {\n//                     keyboardType: 'FollowUpDate',\n//                   },\n//                 },                                                                 \n//                 OwnerStatus: {\n//                   label: 'OwnerStatus',\n//                   inputProps: {\n//                     keyboardType: 'OwnerStatus',\n//                   },\n//                 },   \n//                 Street: {\n//                   label: 'Street',\n//                   inputProps: {\n//                     keyboardType: 'Street',\n//                   },\n//                 },                                                                                \n//                 City: {\n//                   label: 'City',\n//                   inputProps: {\n//                     keyboardType: 'City',\n//                   },\n//                 },                                                                                \n//                 State: {\n//                   label: 'State',\n//                   inputProps: {\n//                     keyboardType: 'State',\n//                   },\n//                 },                                                                                \n\n//                 email: {\n//                   label: 'Email',\n//                   inputProps: {\n//                     keyboardType: 'email-address',\n//                   },\n//                 },\n//                 password: {\n//                   label: 'Password',\n//                   inputProps: {\n//                     secureTextEntry: true,\n//                   },\n//                 },\n//               }}\n//             />\n//             </ScrollView>\n//             </SafeAreaView>\n//           );\n      \n// };\n\n// export default MultiSelector;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f6f6f6',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  header:{\n    fontSize:25,\n    fontWeight:\"bold\",\n    color:\"#364f6b\",\n    marginBottom:40\n  },\n  item:{\n    width:\"80%\",\n    backgroundColor:\"#fff\",\n    borderRadius:20,\n    padding:10,\n    marginBottom:10,\n    flexDirection:\"row\",\n  },\n  checkBoxTxt:{\n    marginLeft:20\n  },\n  submit:{\n    width:\"80%\",\n    backgroundColor:\"#fc5185\",\n    borderRadius:20,\n    padding:10,\n    alignItems:\"center\",\n    marginTop:40\n  }\n});"]},"metadata":{},"sourceType":"module"}