{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/jay/Desktop/ScrapeTools/WORKING/ExpoApps/myNewProject/screens/HighPriority.tsx\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport * as AddCalendarEvent from 'react-native-add-calendar-event';\nimport moment from 'moment';\nvar EVENT_TITLE = 'Lunch';\nvar TIME_NOW_IN_UTC = moment.utc();\n\nvar utcDateToString = function utcDateToString(momentInUTC) {\n  var s = moment.utc(momentInUTC).format('YYYY-MM-DDTHH:mm:ss.SSS[Z]');\n  return s;\n};\n\nvar addToCalendar = function addToCalendar(title, startDateUTC) {\n  var eventConfig = {\n    title: title,\n    startDate: utcDateToString(startDateUTC),\n    endDate: utcDateToString(moment.utc(startDateUTC).add(1, 'hours')),\n    notes: 'tasty!',\n    navigationBarIOS: {\n      tintColor: 'orange',\n      backgroundColor: 'green',\n      titleColor: 'blue'\n    }\n  };\n  AddCalendarEvent.presentEventCreatingDialog(eventConfig).then(function (eventInfo) {\n    alert('eventInfo -> ' + JSON.stringify(eventInfo));\n  }).catch(function (error) {\n    alert('Error -> ' + error);\n  });\n};\n\nvar editCalendarEventWithId = function editCalendarEventWithId(eventId) {\n  if (!eventId) {\n    alert('Please Insert Event Id');\n    return;\n  }\n\n  var eventConfig = {\n    eventId: eventId\n  };\n  AddCalendarEvent.presentEventEditingDialog(eventConfig).then(function (eventInfo) {\n    alert('eventInfo -> ' + JSON.stringify(eventInfo));\n  }).catch(function (error) {\n    alert('Error -> ' + error);\n  });\n};\n\nvar showCalendarEventWithId = function showCalendarEventWithId(eventId) {\n  if (!eventId) {\n    alert('Please Insert Event Id');\n    return;\n  }\n\n  var eventConfig = {\n    eventId: eventId,\n    allowsEditing: true,\n    allowsCalendarPreview: true,\n    navigationBarIOS: {\n      tintColor: 'orange',\n      backgroundColor: 'green'\n    }\n  };\n  AddCalendarEvent.presentEventViewingDialog(eventConfig).then(function (eventInfo) {\n    alert('eventInfo -> ' + JSON.stringify(eventInfo));\n  }).catch(function (error) {\n    alert('Error -> ' + error);\n  });\n};\n\nexport default function HighPriority() {\n  var _useState = useState('Default event'),\n      _useState2 = _slicedToArray(_useState, 2),\n      eventTitle = _useState2[0],\n      setEventTitle = _useState2[1];\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, \"Add Event in device's Calendar from React Native App\"), React.createElement(View, {\n    style: styles.inputContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, \"Enter the Event title:\"), React.createElement(TextInput, {\n    style: styles.input,\n    value: eventTitle,\n    onChangeText: function onChangeText(text) {\n      return setEventTitle(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, \"Current Date and Time of the event:\"), React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, moment.utc(TIME_NOW_IN_UTC).local().format('lll'))), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: [styles.text, {\n      color: 'white'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, \"Add this event to the calendar\")));\n}\nexport default HighPriority;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#307ecc',\n    padding: 16\n  },\n  heading: {\n    color: 'white',\n    fontSize: 16,\n    textAlign: 'center',\n    margin: 10\n  },\n  buttonStyle: {\n    paddingVertical: 10,\n    paddingHorizontal: 30,\n    backgroundColor: '#f5821f',\n    margin: 15\n  },\n  buttonTextStyle: {\n    color: 'white',\n    textAlign: 'center'\n  },\n  buttonHalfStyle: {\n    alignItems: 'center',\n    backgroundColor: '#DDDDDD',\n    padding: 10,\n    flex: 1\n  },\n  titleStyle: {\n    color: 'white',\n    textAlign: 'center',\n    fontSize: 20,\n    marginBottom: 20\n  },\n  inputStyle: {\n    height: 40,\n    minWidth: '100%',\n    marginBottom: 10,\n    marginTop: 30,\n    padding: 10,\n    backgroundColor: '#ffe6e6'\n  }\n});","map":{"version":3,"sources":["/Users/jay/Desktop/ScrapeTools/WORKING/ExpoApps/myNewProject/screens/HighPriority.tsx"],"names":["React","useState","AddCalendarEvent","moment","EVENT_TITLE","TIME_NOW_IN_UTC","utc","utcDateToString","momentInUTC","s","format","addToCalendar","title","startDateUTC","eventConfig","startDate","endDate","add","notes","navigationBarIOS","tintColor","backgroundColor","titleColor","presentEventCreatingDialog","then","eventInfo","alert","JSON","stringify","catch","error","editCalendarEventWithId","eventId","presentEventEditingDialog","showCalendarEventWithId","allowsEditing","allowsCalendarPreview","presentEventViewingDialog","HighPriority","eventTitle","setEventTitle","styles","container","inputContainer","text","input","local","button","color","StyleSheet","create","flex","alignItems","justifyContent","padding","heading","fontSize","textAlign","margin","buttonStyle","paddingVertical","paddingHorizontal","buttonTextStyle","buttonHalfStyle","titleStyle","marginBottom","inputStyle","height","minWidth","marginTop"],"mappings":"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","sourcesContent":["//  HighPriority \n\n\n// Add Event in Device’s Calendar from React Native App for Android and iOS\n// https://aboutreact.com/react-native-add-event-in-device-calendar/\n\n// import React in our code\nimport React, {useState} from 'react';\n\n// import all the components we are going to use\nimport {\n  SafeAreaView,\n  StyleSheet,\n  Text,\n  View,\n  TextInput,\n  TouchableOpacity,\n} from 'react-native';\n\n//Import library for AddCalendarEvent\nimport\n  * as AddCalendarEvent\nfrom 'react-native-add-calendar-event';\n\n//Import moment.js to deal with time\nimport moment from 'moment';\n\nconst EVENT_TITLE = 'Lunch';\nconst TIME_NOW_IN_UTC = moment.utc();\n\nconst utcDateToString = (momentInUTC) => {\n  let s = moment.utc(momentInUTC)\n            .format('YYYY-MM-DDTHH:mm:ss.SSS[Z]');\n  return s;\n};\n\nconst addToCalendar = (title, startDateUTC) => {\n  const eventConfig = {\n    title,\n    startDate: utcDateToString(startDateUTC),\n    endDate: \n    utcDateToString(moment.utc(startDateUTC).add(1, 'hours')),\n    notes: 'tasty!',\n    navigationBarIOS: {\n      tintColor: 'orange',\n      backgroundColor: 'green',\n      titleColor: 'blue',\n    },\n  };\n\n  AddCalendarEvent.presentEventCreatingDialog(eventConfig)\n    .then((eventInfo) => {\n      alert('eventInfo -> ' + JSON.stringify(eventInfo));\n    })\n    .catch((error) => {\n      // handle error such as when user rejected permissions\n      alert('Error -> ' + error);\n    });\n};\n\nconst editCalendarEventWithId = (eventId) => {\n  if (!eventId) {\n    alert('Please Insert Event Id');\n    return;\n  }\n  const eventConfig = {\n    eventId,\n  };\n\n  AddCalendarEvent.presentEventEditingDialog(eventConfig)\n    .then((eventInfo) => {\n      alert('eventInfo -> ' + JSON.stringify(eventInfo));\n    })\n    .catch((error) => {\n      alert('Error -> ' + error);\n    });\n};\n\nconst showCalendarEventWithId = (eventId) => {\n  if (!eventId) {\n    alert('Please Insert Event Id');\n    return;\n  }\n  const eventConfig = {\n    eventId,\n    allowsEditing: true,\n    allowsCalendarPreview: true,\n    navigationBarIOS: {\n      tintColor: 'orange',\n      backgroundColor: 'green',\n    },\n  };\n\n  AddCalendarEvent.presentEventViewingDialog(eventConfig)\n    .then((eventInfo) => {\n      alert('eventInfo -> ' + JSON.stringify(eventInfo));\n    })\n    .catch((error) => {\n      alert('Error -> ' + error);\n    });\n};\n\n\n\n\nexport default function HighPriority() {\n  const [eventTitle, setEventTitle] = useState('Default event');\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>\n        Add Event in device's Calendar from React Native App\n      </Text>\n      <View style={styles.inputContainer}>\n        <Text style={styles.text}>Enter the Event title:</Text>\n        <TextInput\n          style={styles.input}\n          value={eventTitle}\n          onChangeText={text => setEventTitle(text)}\n        />\n        <Text style={styles.text}>Current Date and Time of the event:</Text>\n        <Text style={styles.text}>\n          {moment\n            .utc(TIME_NOW_IN_UTC)\n            .local()\n            .format('lll')}\n        </Text>\n      </View>\n      <TouchableOpacity style={styles.button}>\n        <Text style={[styles.text, { color: 'white' }]}>\n          Add this event to the calendar\n        </Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\nexport default HighPriority;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#307ecc',\n    padding: 16,\n  },\n  heading: {\n    color: 'white',\n    fontSize: 16,\n    textAlign: 'center',\n    margin: 10,\n  },\n  buttonStyle: {\n    paddingVertical: 10,\n    paddingHorizontal: 30,\n    backgroundColor: '#f5821f',\n    margin: 15,\n  },\n  buttonTextStyle: {\n    color: 'white',\n    textAlign: 'center',\n  },\n  buttonHalfStyle: {\n    alignItems: 'center',\n    backgroundColor: '#DDDDDD',\n    padding: 10,\n    flex: 1,\n  },\n  titleStyle: {\n    color: 'white',\n    textAlign: 'center',\n    fontSize: 20,\n    marginBottom: 20,\n  },\n  inputStyle: {\n    height: 40,\n    minWidth: '100%',\n    marginBottom: 10,\n    marginTop: 30,\n    padding: 10,\n    backgroundColor: '#ffe6e6',\n  },\n});"]},"metadata":{},"sourceType":"module"}